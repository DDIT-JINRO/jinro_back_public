<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.or.ddit.comm.peer.teen.service.impl.TeenCommMapper">

	<resultMap type="kr.or.ddit.comm.vo.CommReplyVO"
		id="commReplyMap">
		<id property="replyId" column="REPLY_ID" />
		<result property="boardId" column="BOARD_ID" />
		<result property="replyParentId" column="REPLY_PARENT_ID" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="replyDelYn" column="REPLY_DEL_YN" />
		<result property="replyCreatedAt" column="REPLY_CREATED_AT" />
		<result property="replyUpdatedAt" column="REPLY_UPDATED_AT" />
		<result property="childCount" column="CHILD_COUNT" />

		<result property="memId" column="R_MEM_ID" />
		<result property="memGen" column="R_MEM_GEN" />
		<result property="memName" column="R_MEM_NAME" />
		<result property="memNickname" column="R_MEM_NICKNAME" />
		<result property="memEmail" column="R_MEM_EMAIL" />

		<result property="fileBadge" column="R_FILE_BADGE_ID" />
		<result property="fileProfile" column="R_FILE_PROFILE_ID" />
		<result property="fileSub" column="R_FILE_SUB_ID" />
		<result property="fileBadgeStr" column="R_FILE_BADGE" />
		<result property="fileProfileStr" column="R_FILE_PROFILE" />
		<result property="fileSubStr" column="R_FILE_SUB" />
	</resultMap>

	<select id="selectBoardTotal" parameterType="kr.or.ddit.comm.vo.CommBoardVO" resultType="int">
		SELECT
		COUNT(*)
		FROM
		BOARD B
		WHERE
		B.CC_ID = #{ccId}
		AND B.BOARD_DEL_YN = 'N'
		<if test="status != null and status != '' and status == 3">
			AND (B.BOARD_TITLE LIKE '%'||#{keyword}||'%' OR B.BOARD_CONTENT LIKE '%'||#{keyword}||'%')
		</if>
		<if test="status != null and status != '' and status == 1">
			AND B.BOARD_TITLE LIKE '%'||#{keyword}||'%'
		</if>
		<if test="status != null and status != '' and status == 2">
			AND B.BOARD_CONTENT LIKE '%'||#{keyword}||'%'
		</if>

	</select>

	<select id="selectTeenList"
		resultType="kr.or.ddit.comm.vo.CommBoardVO"
		parameterType="kr.or.ddit.comm.vo.CommBoardVO">
		SELECT
			*
		FROM (
			SELECT
				ROWNUM AS RNUM, C.*
			FROM (
				SELECT
					B.BOARD_ID
					, B.MEM_ID
					, M.MEM_NICKNAME
					, B.CC_ID
					, B.BOARD_TITLE
					, B.BOARD_CONTENT
					, B.BOARD_CREATED_AT
					, B.BOARD_UPDATED_AT
					, B.BOARD_CNT
					, B.BOARD_DEL_YN
					, B.FILEGROUP_ID
					, (
						SELECT
							COUNT(*)
						FROM
							BOARD_LIKE
						WHERE
							BOARD_ID = B.BOARD_ID
					) AS BOARD_LIKE_CNT
					<if test="memId != null and memId != ''">
					, (
						SELECT
							'1'
						FROM
							BOOKMARK
						WHERE
							MEM_ID = #{memId}
						AND
							BM_CATEGORY_ID = 'G03005'
						AND
							BM_TARGET_ID = B.BOARD_ID
					) AS IS_BOOKMARK
					</if>
				    , (
				        SELECT
				            COUNT(*)
				        FROM
				            REPLY
				        WHERE
				            BOARD_ID = B.BOARD_ID
				    ) AS BOARD_REPLY_CNT
				FROM
					BOARD B
					JOIN MEMBER M ON B.MEM_ID = M.MEM_ID
				WHERE
					B.CC_ID = #{ccId}
				AND
					B.BOARD_DEL_YN = 'N'
				<if test="status != null and status != '' and status == 3">
					AND (B.BOARD_TITLE LIKE '%'||#{keyword}||'%' OR B.BOARD_CONTENT LIKE '%'||#{keyword}||'%')
				</if>
				<if test="status != null and status != '' and status == 1">
					AND B.BOARD_TITLE LIKE '%'||#{keyword}||'%'
				</if>
				<if test="status != null and status != '' and status == 2">
					AND B.BOARD_CONTENT LIKE '%'||#{keyword}||'%'
				</if>
			    ORDER BY
			    <if test="memId != null and memId != ''">
			        IS_BOOKMARK ASC,
			    </if>
			    <choose>
			        <when test="sortOrder == 'newest'">B.BOARD_UPDATED_AT DESC</when>
			        <when test="sortOrder == 'oldest'">B.BOARD_UPDATED_AT ASC</when>
			        <when test="sortOrder == 'liked'">BOARD_LIKE_CNT DESC, B.BOARD_UPDATED_AT DESC</when>
			        <when test="sortOrder == 'cnt'">B.BOARD_CNT DESC, B.BOARD_UPDATED_AT DESC</when>
			        <otherwise>B.BOARD_UPDATED_AT DESC</otherwise>
			    </choose>
			    , B.BOARD_ID
			) C
			WHERE ROWNUM &lt;= #{endNo}
		)
		WHERE RNUM &gt; #{startNo}
	</select>

	<select id="selectTeenDetail"
		parameterType="kr.or.ddit.comm.vo.CommBoardVO"
		resultType="kr.or.ddit.comm.vo.CommBoardVO">
		SELECT
			B.BOARD_ID
			, B.MEM_ID
			, B.CC_ID
			, B.BOARD_TITLE
			, B.BOARD_CONTENT
			, B.BOARD_CREATED_AT
			, B.BOARD_UPDATED_AT
			, B.BOARD_CNT
			, B.BOARD_DEL_YN
			, B.FILEGROUP_ID
			, (
				SELECT
					COUNT(*)
				FROM
					BOARD_LIKE
				WHERE
					BOARD_ID = B.BOARD_ID
			) AS BOARD_LIKE_CNT
			, CASE
				WHEN EXISTS (
					SELECT
						1
					FROM
						BOARD_LIKE
					WHERE
						BOARD_ID = B.BOARD_ID
					AND
						MEM_ID = #{memId}
					)
				THEN 1
			ELSE 0
			END AS BOARD_IS_LIKED
			, (
				SELECT
					BM_TARGET_ID
				FROM
					BOOKMARK
				WHERE
					MEM_ID = #{memId}
				AND
					BM_TARGET_ID = B.BOARD_ID
			) AS IS_BOOKMARK
		FROM
			BOARD B
		WHERE
			B.BOARD_ID = #{boardId}
	</select>

	<select id="selectBoardReply"
		parameterType="kr.or.ddit.comm.vo.CommReplyVO"
		resultType="kr.or.ddit.comm.vo.CommReplyVO">
		SELECT
		R.REPLY_ID,
		R.BOARD_ID,
		R.REPLY_PARENT_ID,
		R.MEM_ID,
		R.REPLY_CONTENT,
		R.REPLY_DEL_YN,
		R.REPLY_CREATED_AT,
		R.REPLY_UPDATED_AT,

		(SELECT COUNT(*)
		FROM REPLY_LIKE
		WHERE REPLY_ID = R.REPLY_ID
		AND BOARD_ID
		= R.BOARD_ID) AS REPLY_LIKE_CNT,

		CASE
		WHEN EXISTS (
		SELECT 1
		FROM
		REPLY_LIKE
		WHERE REPLY_ID = R.REPLY_ID
		AND BOARD_ID = R.BOARD_ID
		AND
		MEM_ID =
		#{memId}
		)
		THEN 1
		ELSE 0
		END AS REPLY_IS_LIKED,

		(SELECT COUNT(*)
		FROM REPLY
		WHERE
		REPLY_PARENT_ID = R.REPLY_ID
		AND REPLY_DEL_YN = 'N') AS
		CHILD_COUNT,

		M.FILE_SUB,
		M.FILE_PROFILE,
		M.FILE_BADGE,
		M.MEM_NICKNAME

		FROM
		REPLY R

		JOIN
		MEMBER M ON R.MEM_ID = M.MEM_ID

		WHERE R.BOARD_ID =
		#{boardId}
		AND
		R.REPLY_PARENT_ID IS NULL
		AND R.REPLY_DEL_YN = 'N'

		ORDER BY
		R.REPLY_CREATED_AT DESC
	</select>

	<select id="selectChildReplyList" parameterType="int"
		resultMap="commReplyMap">
		SELECT
		R1.REPLY_ID
		, R1.BOARD_ID
		, R1.REPLY_PARENT_ID
		,
		R1.MEM_ID
		, R1.REPLY_CONTENT
		, R1.REPLY_DEL_YN
		, R1.REPLY_CREATED_AT
		,
		R1.REPLY_UPDATED_AT
		, (
		SELECT COUNT(*)
		FROM REPLY R2
		WHERE
		R2.REPLY_PARENT_ID = R1.REPLY_ID
		AND R2.REPLY_DEL_YN = 'N'
		) AS
		CHILD_COUNT

		, M.MEM_ID AS R_MEM_ID
		, M.MEM_GEN AS R_MEM_GEN
		, M.MEM_NAME
		AS R_MEM_NAME
		, M.MEM_NICKNAME AS R_MEM_NICKNAME
		,
		M.MEM_EMAIL AS
		R_MEM_EMAIL
		, M.FILE_BADGE AS R_FILE_BADGE_ID
		,
		M.FILE_PROFILE AS
		R_FILE_PROFILE_ID
		, M.FILE_SUB AS R_FILE_SUB_ID
		,
		D1.FILE_SAVE_NAME AS
		R_FILE_BADGE
		, D2.FILE_SAVE_NAME AS R_FILE_PROFILE
		, D3.FILE_SAVE_NAME
		AS R_FILE_SUB

		FROM REPLY R1
		LEFT JOIN MEMBER M ON
		M.MEM_ID = R1.MEM_ID
		LEFT JOIN FILE_GROUP FG1 ON FG1.FILE_GROUP_ID =
		M.FILE_BADGE
		LEFT JOIN
		FILE_DETAIL D1 ON D1.FILE_GROUP_ID =
		FG1.FILE_GROUP_ID
		LEFT JOIN
		FILE_GROUP FG2 ON FG2.FILE_GROUP_ID =
		M.FILE_PROFILE
		LEFT JOIN
		FILE_DETAIL D2 ON D2.FILE_GROUP_ID =
		FG2.FILE_GROUP_ID
		LEFT JOIN
		FILE_GROUP FG3 ON FG3.FILE_GROUP_ID =
		M.FILE_SUB
		LEFT JOIN FILE_DETAIL
		D3 ON D2.FILE_GROUP_ID =
		FG3.FILE_GROUP_ID

		WHERE R1.REPLY_PARENT_ID =
		#{replyId}
		AND
		R1.REPLY_DEL_YN = 'N'

		ORDER BY R1.REPLY_CREATED_AT ASC
	</select>

	<select id="selectReplyDetail" parameterType="int"
		resultMap="commReplyMap">
		SELECT
		R1.REPLY_ID
		, R1.BOARD_ID
		, R1.REPLY_PARENT_ID
		,
		R1.MEM_ID
		, R1.REPLY_CONTENT
		, R1.REPLY_DEL_YN
		, R1.REPLY_CREATED_AT
		,
		R1.REPLY_UPDATED_AT
		, (
		SELECT COUNT(*)
		FROM REPLY R2
		WHERE
		R2.REPLY_PARENT_ID = R1.REPLY_ID
		AND R2.REPLY_DEL_YN = 'N'
		) AS
		CHILD_COUNT

		, M.MEM_ID AS R_MEM_ID
		, M.MEM_GEN AS R_MEM_GEN
		, M.MEM_NAME
		AS R_MEM_NAME
		, M.MEM_NICKNAME AS R_MEM_NICKNAME
		,
		M.MEM_EMAIL AS
		R_MEM_EMAIL
		, M.FILE_BADGE AS R_FILE_BADGE_ID
		,
		M.FILE_PROFILE AS
		R_FILE_PROFILE_ID
		, M.FILE_SUB AS R_FILE_SUB_ID
		,
		D1.FILE_SAVE_NAME AS
		R_FILE_BADGE
		, D2.FILE_SAVE_NAME AS R_FILE_PROFILE

		FROM REPLY R1
		LEFT
		JOIN MEMBER M ON M.MEM_ID = R1.MEM_ID
		LEFT JOIN
		FILE_GROUP FG1 ON
		FG1.FILE_GROUP_ID = M.FILE_BADGE
		LEFT JOIN
		FILE_DETAIL D1 ON
		D1.FILE_GROUP_ID = FG1.FILE_GROUP_ID
		LEFT JOIN
		FILE_GROUP FG2 ON
		FG2.FILE_GROUP_ID = M.FILE_PROFILE
		LEFT JOIN
		FILE_DETAIL D2 ON
		D2.FILE_GROUP_ID = FG2.FILE_GROUP_ID

		WHERE
		R1.REPLY_ID = #{replyId}
	</select>

	<insert id="insertReply"
		parameterType="kr.or.ddit.comm.vo.CommReplyVO">
		<selectKey keyProperty="replyId" order="BEFORE"
			resultType="int">
			SELECT NVL(MAX(REPLY_ID),0)+1 FROM REPLY
		</selectKey>

		INSERT INTO REPLY(
		REPLY_ID
		, BOARD_ID
		<if test="replyParentId != null and replyParentId != 0">
			, REPLY_PARENT_ID
		</if>
		, MEM_ID
		, REPLY_CONTENT
		, REPLY_DEL_YN
		, REPLY_CREATED_AT
		,
		REPLY_UPDATED_AT
		) VALUES (
		#{replyId}
		, #{boardId}
		<if test="replyParentId != null and replyParentId != 0">
			, #{replyParentId}
		</if>
		, #{memId}
		, #{replyContent}
		, 'N'
		, SYSDATE
		, SYSDATE
		)
	</insert>

	<insert id="insertBoard"
		parameterType="kr.or.ddit.comm.vo.CommBoardVO">
		INSERT INTO BOARD (
		BOARD_ID
		, MEM_ID
		, CC_ID
		, BOARD_TITLE
		, BOARD_CONTENT
		, BOARD_CREATED_AT
		, BOARD_UPDATED_AT
		, BOARD_CNT
		,
		BOARD_DEL_YN
		, FILEGROUP_ID
		) VALUES (
		(SELECT NVL(MAX(BOARD_ID), 0) + 1
		FROM BOARD)
		, #{memId}
		, #{ccId}
		, #{boardTitle}
		, #{boardContent}
		,
		SYSDATE
		, SYSDATE
		, 0
		, 'N'
		, #{fileGroupId}
		)
	</insert>

	<select id="selectTeenBoard" parameterType="int"
		resultType="kr.or.ddit.comm.vo.CommBoardVO">
		SELECT
		BOARD_ID
		, MEM_ID
		, CC_ID
		, BOARD_TITLE
		, BOARD_CONTENT
		,
		BOARD_CREATED_AT
		, BOARD_UPDATED_AT
		, BOARD_CNT
		, BOARD_DEL_YN
		,
		FILEGROUP_ID
		FROM
		BOARD
		WHERE BOARD_ID = #{boardId}
		AND BOARD_DEL_YN = 'N'
	</select>

	<update id="updateBoard"
		parameterType="kr.or.ddit.comm.vo.CommBoardVO">
		UPDATE BOARD
		SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		BOARD_UPDATED_AT = SYSDATE,
		FILEGROUP_ID = #{fileGroupId}
		WHERE
		BOARD_ID = #{boardId}
		AND MEM_ID =
		#{memId}
	</update>

	<update id="deleteteenBoard"
		parameterType="kr.or.ddit.comm.vo.CommBoardVO">
		UPDATE BOARD
		SET
		BOARD_DEL_YN = 'Y'
		WHERE
		BOARD_ID =
		#{boardId}
		AND MEM_ID = #{memId}
	</update>

	<update id="deleteReply"
		parameterType="kr.or.ddit.comm.vo.CommReplyVO">
		UPDATE REPLY
		SET REPLY_DEL_YN = 'Y'
		WHERE REPLY_ID =
		#{replyId}
		AND MEM_ID = #{memId}
		AND REPLY_DEL_YN = 'N'
	</update>

	<select id="getBirthByMemId" parameterType="String"
		resultType="String">
		SELECT TO_CHAR(MEM_BIRTH, 'YYYY-MM-DD')
		FROM MEMBER
		WHERE
		MEM_ID = #{memId}
	</select>

	<update id="cntPlus" parameterType="int">
		UPDATE BOARD
		SET BOARD_CNT =
		BOARD_CNT + 1
		WHERE BOARD_ID = #{boardId}
	</update>

	<select id="selectBoardLiked"
		parameterType="kr.or.ddit.comm.vo.CommBoardLikeVO"
		resultType="kr.or.ddit.comm.vo.CommBoardLikeVO">
		SELECT
		BOARD_ID
		, MEM_ID
		, LIKE_AT
		FROM
		BOARD_LIKE
		WHERE MEM_ID =
		#{memId} AND BOARD_ID = #{boardId}
	</select>


	<update id="deleteBoardLiked"
		parameterType="kr.or.ddit.comm.vo.CommBoardLikeVO">
		DELETE FROM BOARD_LIKE
		WHERE
		BOARD_ID = #{boardId}
		AND
		MEM_ID = #{memId}
	</update>

	<update id="insertBoardLiked"
		parameterType="kr.or.ddit.comm.vo.CommBoardLikeVO">
		INSERT INTO BOARD_LIKE (
		BOARD_ID
		, MEM_ID
		, LIKE_AT
		)
		VALUES (
		#{boardId}
		, #{memId}
		, SYSDATE
		)
	</update>

	<select id="selectBoardLikedCnt" parameterType="int"
		resultType="int">
		SELECT COUNT(*)
		AS likeCnt
		FROM BOARD_LIKE
		WHERE BOARD_ID =
		#{boardId}
	</select>

	<select id="selectReplyLiked"
		parameterType="kr.or.ddit.comm.vo.CommReplyLikeVO"
		resultType="kr.or.ddit.comm.vo.CommReplyLikeVO">
		SELECT
		BOARD_ID
		, MEM_ID
		, LIKE_AT
		, REPLY_ID
		FROM
		REPLY_LIKE
		WHERE MEM_ID =
		#{memId} AND BOARD_ID = #{boardId} AND REPLY_ID =
		#{replyId}
	</select>

	<update id="deleteReplyLiked"
		parameterType="kr.or.ddit.comm.vo.CommReplyLikeVO">
		DELETE FROM REPLY_LIKE
		WHERE
		BOARD_ID = #{boardId}
		AND
		MEM_ID = #{memId}
		AND
		REPLY_ID = #{replyId}
	</update>

	<update id="insertReplyLiked">
		INSERT INTO REPLY_LIKE (
		BOARD_ID
		, MEM_ID
		, LIKE_AT
		,
		REPLY_ID
		)
		VALUES (
		#{boardId}
		, #{memId}
		, SYSDATE
		, #{replyId}
		)
	</update>

	<select id="selectReplyLikedCnt"
		parameterType="kr.or.ddit.comm.vo.CommReplyLikeVO" resultType="int">
		SELECT
		COUNT(*)
		AS likeCnt
		FROM REPLY_LIKE
		WHERE BOARD_ID = #{boardId} AND
		REPLY_ID = #{replyId}

	</select>
</mapper>